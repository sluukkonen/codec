// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should collect errors from all codecs 1`] = `
[
  {
    "code": "invalid_type",
    "expected": "object",
    "path": [],
    "received": "null",
  },
  {
    "code": "invalid_type",
    "expected": "object",
    "path": [],
    "received": "null",
  },
]
`;

exports[`should collect errors from all codecs 2`] = `
[
  {
    "code": "invalid_type",
    "expected": "number",
    "path": [
      "a",
    ],
    "received": "undefined",
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "path": [
      "b",
    ],
    "received": "undefined",
  },
]
`;

exports[`should collect errors from all codecs 3`] = `
[
  {
    "code": "invalid_type",
    "expected": "number",
    "path": [
      "a",
    ],
    "received": "string",
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "path": [
      "b",
    ],
    "received": "string",
  },
]
`;

exports[`should work with complex codecs 1`] = `
[
  {
    "code": "invalid_type",
    "expected": "string",
    "path": [
      "c",
    ],
    "received": "number",
  },
]
`;

exports[`should work with non-object types 1`] = `
[
  {
    "code": "invalid_union",
    "errors": [
      {
        "code": "invalid_type",
        "expected": "number",
        "path": [],
        "received": "boolean",
      },
      {
        "code": "invalid_type",
        "expected": "string",
        "path": [],
        "received": "boolean",
      },
    ],
    "path": [],
  },
]
`;

exports[`should work with non-object types 2`] = `
[
  {
    "code": "invalid_union",
    "errors": [
      {
        "code": "invalid_type",
        "expected": "boolean",
        "path": [],
        "received": "string",
      },
      {
        "code": "invalid_type",
        "expected": "number",
        "path": [],
        "received": "string",
      },
    ],
    "path": [],
  },
]
`;
